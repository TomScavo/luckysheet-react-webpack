# 参考： https://juejin.im/post/5ce5e1f65188254159084141

#「=」 修饰符：要求路径完全匹配
#「~」 修饰符：区分大小写的正则匹配
#「~*」不区分大小写的正则匹配
# [^~] 立刻停止后续的正则搜索
# 查找的顺序及优先级
    # 精确匹配 =
    # 前缀匹配 ^~（立刻停止后续的正则搜索）
    # 按文件中顺序的正则匹配 ~或~*
    # 匹配不带任何修饰的前缀匹配。

# server {
#     server_name website.com;
#     location /doc {
#         return 702;
#     }
#     location /docu {
#         return 701;
#     }
# }
# curl -I website.com:8080/document 依然返回 HTTP/1.1 701
# 前缀匹配下，返回最长匹配的 location，与 location 所在位置顺序无关

server {
    listen 80;
    charset utf-8;
    server_name localhost;
    client_max_body_size 100M;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # CSP
    # 所有内容均来源于站点的同一个源（不包其含子域名)，允许加载任何源的图片。如果有通过script引入外部脚本，需要设置script-src。根据各自项目需求设置，详细参考https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP
    add_header Content-Security-Policy "default-src 'self'; img-src *;";
    # 启用XSS过滤，如果检测到攻击，浏览器将不会清除页面，而是阻止页面加载
    add_header X-Xss-Protection "1;mode=block";
    # 服务器提示客户端一定要遵循在Content-Type首部中对MIME类型的设定，而不能对其修改。
    # 下面两种情况的请求会被阻止：请求类型是"style"，但MIME类型不是"text/css"；请求类型似乎"script"，但MIME类型不是javascript MIME类型
    add_header X-Content-Type-Options nosniff;
    # 该页面可以在相同域名页面的frame中展示。
    add_header X-Frame-Options sameorigin always;

    # lua
    location / {
        access_by_lua_file /usr/local/openresty/nginx/conf/access.lua;
        proxy_pass http://apps.danlu.netease.com:11111;
    }

    # 302
    location /maintaining {
        return 302 $scheme://$http_host;
    }

    # proxy & rewrite
    location /doc {
        access_by_lua_file /usr/local/openresty/nginx/conf/access.lua;
        rewrite /doc/(.+)$ /$1 break;
        proxy_pass http://apps.danlu.netease.com:22222;
    }

    # websocket
    location /home {
        access_by_lua_file /usr/local/openresty/nginx/conf/access.lua;
        rewrite /home/(.+)$ /$1 break;
        proxy_pass http://apps.danlu.netease.com:33333;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # 精确匹配 & 返回本地json & cache no-store
    location = /api/v1/config {
        add_header Cache-Control no-store;
        default_type application/json;
        alias /frontend/assets/config.json;
    }

    # 代理rbac登录
    location /rbac {
        proxy_pass http://dev-k8s.fuxi.netease.com:49427;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
